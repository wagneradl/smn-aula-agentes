"""
Script para testar o Agente Processador de Documentos de forma n√£o interativa
"""

import os
import sys
import importlib.util

# Adicionar o diret√≥rio raiz ao path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def load_module_from_path(module_name, file_path):
    """Carrega um m√≥dulo Python a partir de um caminho de arquivo"""
    spec = importlib.util.spec_from_file_location(module_name, file_path)
    if spec is None:
        raise ImportError(f"N√£o foi poss√≠vel carregar o m√≥dulo {module_name} de {file_path}")
    
    module = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(module)
    return module

def testar_processador_documentos():
    """Fun√ß√£o para testar o Processador de Documentos"""
    print("=" * 70)
    print("TESTE DO PROCESSADOR DE DOCUMENTOS")
    print("=" * 70)
    
    try:
        # Caminho para o arquivo de exemplo
        exemplo_path = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 
                                "exemplos", "exemplo_processador_documentos.py")
        
        # Carregar o m√≥dulo
        exemplo_processador = load_module_from_path("exemplo_processador_documentos", exemplo_path)
        print("‚úÖ M√≥dulo do processador de documentos carregado com sucesso!")
        
        # Criar um documento de exemplo para processamento
        if hasattr(exemplo_processador, 'criar_documento_exemplo'):
            print("\nüìÑ Criando documento de exemplo para teste...")
            caminho_documento = exemplo_processador.criar_documento_exemplo()
            print(f"‚úÖ Documento de exemplo criado: {caminho_documento}")
            
            # Testar carregamento do documento
            if hasattr(exemplo_processador, 'carregar_documento'):
                print("\nüìÇ Carregando documento...")
                try:
                    texto = exemplo_processador.carregar_documento(caminho_documento)
                    print(f"‚úÖ Documento carregado com sucesso!")
                except Exception as e:
                    print(f"‚ùå Erro ao carregar documento: {str(e)}")
                    # Se falhar no carregamento, criar um texto simples para testar
                    texto = "Este √© um texto de exemplo para teste de processamento. "
                    texto += "Cont√©m informa√ß√µes sobre a SMN Tecnologia e seu diretor Jo√£o Silva. "
                    texto += "O projeto tem prazo at√© 15/12/2025 e or√ßamento de R$ 150.000,00."
            else:
                # Se n√£o houver fun√ß√£o de carregamento, criar um texto simples
                texto = "Este √© um texto de exemplo para teste de processamento. "
                texto += "Cont√©m informa√ß√µes sobre a SMN Tecnologia e seu diretor Jo√£o Silva. "
                texto += "O projeto tem prazo at√© 15/12/2025 e or√ßamento de R$ 150.000,00."
            
            # Testar processamento do documento
            if hasattr(exemplo_processador, 'processar_documento'):
                print("\nüîç Processando documento...")
                try:
                    resultados = exemplo_processador.processar_documento(caminho_documento)
                    print("‚úÖ Documento processado com sucesso!")
                    print("üìã Resultados do processamento:")
                    print(resultados)
                except Exception as e:
                    print(f"‚ùå Erro ao processar documento: {str(e)}")
            
            # Testar extra√ß√£o de informa√ß√µes diretamente
            if hasattr(exemplo_processador, 'extrair_informacoes'):
                print("\nüîé Extraindo informa√ß√µes do texto...")
                segmentos = [texto]
                try:
                    informacoes = exemplo_processador.extrair_informacoes(segmentos)
                    print("‚úÖ Informa√ß√µes extra√≠das com sucesso:")
                    print(informacoes)
                except Exception as e:
                    print(f"‚ùå Erro ao extrair informa√ß√µes: {str(e)}")
                
    except Exception as e:
        print(f"‚ùå Erro: {str(e)}")
        import traceback
        traceback.print_exc()
    
    print("=" * 70)
    print("TESTE CONCLU√çDO")
    print("=" * 70)

if __name__ == "__main__":
    testar_processador_documentos()
